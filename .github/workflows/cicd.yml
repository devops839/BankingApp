name: CICD Pipeline

on:
  push:
    branches: ["main"]

jobs:
  maven-build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean package
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  trivy-fs-scan:
    runs-on: self-hosted
    needs: maven-build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Trivy FS Scan
        run: trivy fs --format table -o fs-report.json .

  sonar_scan:
    runs-on: self-hosted
    needs: trivy-fs-scan

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: ./app
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

  build_docker_image_and_push:
    runs-on: self-hosted
    needs: sonar_scan

    steps:
      - uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: ./app

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Azure Docker Login
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.ACR_URL }}/bankapp:${{ github.sha }} .
          docker push ${{ secrets.ACR_URL }}/bankapp:${{ github.sha }}
